version: '3.4'

services:
  movieapi:
    image: ${DOCKER_REGISTRY-}movieapi
    build:
      context: .
      dockerfile: MovieApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__WebApiDatabase=Host=postgres;Database=MovieApi;Username=postgres;Password=123
      - Redis__ConnectionString=redis:6379
    depends_on:
      - postgres
      - redis
  
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  
  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: MovieApi
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "8001:8080"

  authenticationwebapi:
    image: ${DOCKER_REGISTRY-}authenticationwebapi
    build:
      context: .
      dockerfile: AuthenticationWebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080

volumes:
  pgdata:


